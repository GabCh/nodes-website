{"version":3,"sources":["sketches/models/color.ts","sketches/models/dotted-sphere.ts","sketches/lib/color-blender.js","sketches/models/mountains.ts","sketches/macou.ts","components/AnimatedBackground.tsx","components/SideMenu.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["Color","ColorHex","str","val","this","Colors","Object","values","map","col","DottedSphere","p","nbPoints","diameter","radius","period","p5","r","x","y","speed","amplitude","sineEl","randomPart","partSize","init","i","int","random","touchMoved","event","touchEnded","show","fill","stroke","sine","sin","PI","sqrt","sq","abs","height","width","particleSize","push","translate","rotate","radians","noStroke","ellipse","pop","g","b","coll","valid","ColorBlender","cVerify","text","cText","bg","inColStr","outColStr","colStrType","midpoints","cursor","base","ends","step","Array","palette","Error","colorParse","stepCalc","mixPalette","c","t","num","toUpperCase","replace","length","a","substr","ret","parseInt","count","j","steps","isNaN","result","k","piece","Math","round","toString","Mountains","f","colorSet","setup","paletteObj","getPalette","draw","background","windowWidth","startY","windowHeight","endY","startX","endX","iterations","iterationRatio","spacingRatio","idx","beginShape","noiseIntensity","vertex","pow","noise","endShape","Macou","sphere","createCanvas","BLACK","createMacou","AnimatedBackground","render","sketch","React","Component","SideMenu","props","Menu","pointing","secondary","vertical","className","color","Item","name","active","state","activeItem","onClick","handleItemClick","e","data","setState","preventDefault","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.092c9941.chunk.js","sourcesContent":["export enum Color {\n  ORANGE = '#DB7D2F',\n  ORANGE_1 = '#DE852B',\n  ORANGE_2 = '#E18D27',\n  ORANGE_3 = '#E39522',\n  ORANGE_4 = '#E69D1E',\n  ORANGE_5 = '#E9A51A',\n  ORANGE_6 = '#ECAD16',\n  ORANGE_7 = '#EEB511',\n  YELLOW_1 = '#F1BD0D',\n  YELLOW_2 = '#E4C141',\n  YELLOW_3 = '#D8C475',\n  LIGHT_GRAY = '#CBC8A9',\n  LIGHT_GRAY_3 = '#A1B5BB',\n  LIGHT_GRAY_4 = '#869DA7',\n  LIGHT_GRAY_5 = '#6B8694',\n  DARK_BLUE = '#35576D',\n  DARK_BLUE_1 = '#424C5F',\n  DARK_BLUE_2 = '#4E4151',\n  DARK_BLUE_3 = '#5B3544',\n  DARK_BLUE_4 = '#672A36',\n  DARK_RED = '#741F28',\n  DARK_RED_4 = '#4D151B',\n  DARK_RED_5 = '#270A0D',\n  BLACK = '#000000',\n}\n\nexport class ColorHex {\n  public val: string\n  constructor(str: string) {\n    this.val = str\n  }\n}\n\nexport const Colors = Object.values(Color).map((col) => new ColorHex(col))\n","export class DottedSphere {\n    private readonly nbPoints: number = 250\n    private readonly diameter: number = 400\n    private readonly radius: number = this.diameter / 2\n    private readonly period: number = 150\n    private readonly p5: any\n    private r: number\n    private x: number\n    private y: number\n    private speed: number\n    private amplitude: number\n    private sineEl: number\n    private randomPart: number[]\n    private partSize: number[]\n\n    constructor(p: any) {\n        this.p5 = p\n        this.r = 0\n        this.x = 0\n        this.y = 0\n        this.speed = 0.001\n        this.amplitude = 0\n        this.sineEl = 0\n        this.randomPart = []\n        this.partSize = []\n        this.p5.touchMoved = this.touchMoved\n        this.p5.touchEnded = this.touchEnded\n    }\n\n    public init = (): void => {\n        for (let i = 0; i < this.nbPoints; i++) {\n            this.randomPart[i] = this.p5.int(this.p5.random(0, 1000))\n            this.partSize[i] = this.p5.int(this.p5.random(2, 8))\n        }\n    }\n\n    public touchMoved = (event: any): void => {\n        this.speed = 0.005\n    }\n\n    public touchEnded = (event: any): void => {\n        this.speed = 0.001\n    }\n\n    public show = (): void => {\n        this.p5.fill('#000000')\n        this.p5.stroke('#000000')\n        this.x += 0.1\n        for (let i = 0; i < this.nbPoints; i++) {\n            this.y = this.randomPart[i]\n\n            const sine = this.p5.sin((2 * this.p5.PI * this.x) / this.period + this.randomPart[i])\n            this.amplitude = this.p5.sqrt(this.p5.sq(this.radius) -\n                this.p5.sq(this.p5.abs((2 * this.p5.height / 5) - this.y)))\n            this.sineEl = this.p5.width / 2 + sine * this.amplitude\n\n            const particleSize = this.partSize[i]\n\n            this.p5.push()\n            this.p5.translate(this.p5.width / 2, (2 * this.p5.height / 5))\n            this.r += this.speed\n            this.p5.rotate(this.p5.radians(this.r))\n            this.p5.translate(-this.p5.width / 2, -(2 * this.p5.height / 5))\n\n            this.p5.stroke(255)\n            this.p5.noStroke()\n            this.p5.fill('#e1f1ff')\n            this.p5.ellipse(this.sineEl, this.y, particleSize, particleSize)\n            this.p5.noStroke()\n            this.p5.pop()\n        }\n        this.p5.fill('#000000')\n        this.p5.stroke('#000000')\n    }\n}\n","// Thanks to Steve Champeon (hesketh.com) for explaining the math in such a way that I could\n// understand it and create this tool\n// Thanks to Roberto Diez for the idea to create the \"waterfall\" display\n// Thanks to the Rhino book, I was able to (clumsily) set up the Color object\n//   v1.0 (20030213) initial release\n//   v1.1 (20030221) added rgbd and rgbp value types\n//   v1.2 (20030511) added \"waterfall\" display of \"web-safe\" colors\n//   v1.3 (20030514) single-page structure for easy local saves; CC license\n//   v1.4 (20150321) added URL fragment ID storing of colors, steps, type\n// v1.4.1 (20150322) fixed RGB/rgb parsing error\nclass Color {\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.coll = [r, g, b];\n        this.valid = ColorBlender.cVerify(this.coll);\n        this.text = ColorBlender.cText(this.coll, 'hex');\n        this.bg = ColorBlender.cText(this.coll, 'hex');\n    }\n}\n\nexport class ColorBlender {\n    cursor = 0;\n    base = 16;\n    ends = [new Color(), new Color()];\n    step = new Array(3);\n    midpoints = 1\n    palette = [];\n\n    constructor(inColStr, outColStr, colStrType, midpoints) {\n        this.init();\n        if (midpoints <= 80) {\n            this.midpoints = midpoints\n        } else {\n          throw Error('ColorBlender max midpoints = 80')\n        }\n        this.ends[0] = this.colorParse(inColStr, colStrType)\n        this.ends[1] = this.colorParse(outColStr, colStrType)\n        this.stepCalc()\n        this.mixPalette()\n    }\n\n    static cVerify(c) {\n        let valid = 'n';\n        if ((!isNaN(c[0])) && (!isNaN(c[1])) && (!isNaN(c[2]))) {\n            valid = 'y'\n        }\n        return valid;\n    }\n\n    static cText(c, t) {\n        let result = '';\n        let d = 1;\n        for (let k = 0; k < 3; k++) {\n            const val = Math.round(c[k]/d);\n            let piece = val.toString(16);\n            if (t === 'hex' && piece.length < 2) {piece = '0' + piece;}\n            result = result + piece;\n        }\n        if (t === 'hex') {result = '#' + result.toUpperCase();}\n        return result;\n    }\n\n    getPalette() {\n        return this.palette\n    }\n\n    colorParse(c, t) {\n        let m = 1;\n        c = c.toUpperCase();\n        let col = c.replace(/[\\#\\(]*/i, '');\n        let num;\n        if (t === 'hex') {\n            if (col.length === 3) {\n                const a = col.substr(0, 1);\n                const b = col.substr(1, 1);\n                const c = col.substr(2, 1);\n                col = a + a + b + b + c + c;\n            }\n            num  = [col.substr(0, 2), col.substr(2, 2), col.substr(4, 2)];\n            this.base = 16;\n        }\n        const ret = [parseInt(num[0], this.base) * m, parseInt(num[1], this.base) * m, parseInt(num[2], this.base) * m];\n        return new Color(ret[0], ret[1], ret[2]);\n    }\n\n    mixPalette() {\n        const steps = this.midpoints;\n        const count = steps + 1;\n        this.palette[0] = new Color(this.ends[0].r, this.ends[0].g, this.ends[0].b);\n        this.palette[count] = new Color(this.ends[1].r, this.ends[1].g, this.ends[1].b);\n        for (let i = 1; i < count; i++) {\n            const r = (this.ends[0].r + (this.step[0] * i));\n            const g = (this.ends[0].g + (this.step[1] * i));\n            const b = (this.ends[0].b + (this.step[2] * i));\n            this.palette[i] = new Color(r, g, b);\n        }\n        for (let j = count + 1; j < 12; j++) {\n            this.palette[j].text = '';\n            this.palette[j].bg = 'white';\n        }\n    }\n\n    stepCalc() {\n        const steps = this.midpoints + 2\n        this.step[0] = (this.ends[1].r - this.ends[0].r) / steps;\n        this.step[1] = (this.ends[1].g - this.ends[0].g) / steps;\n        this.step[2] = (this.ends[1].b - this.ends[0].b) / steps;\n    }\n\n    init() {\n        for (let i = 0; i < 2; i++) {\n            this.ends[i] = new Color();\n        }\n        for (let j = 0; j < (this.midpoints + 2); j++) {\n            this.palette[j] = new Color();\n        }\n    }\n}\n","import {ColorHex, Colors} from './color'\nimport {ColorBlender} from '../lib/color-blender'\n\nexport class Mountains {\n\n    private readonly p5: any\n    private f: number = 0\n    private colorSet: ColorHex[] = Colors\n\n    constructor(p: any) {\n        this.p5 = p\n    }\n\n    public setup = (): void => {\n        const colorBlender = new ColorBlender('#DB7D2F', '#741F28', 'hex', 26)\n        const paletteObj = colorBlender.getPalette()\n        this.colorSet = paletteObj.map((col) => new ColorHex(col.text))\n    }\n\n    public draw = (): void => {\n        this.f++\n        this.p5.background(0)\n        this.p5.fill(0)\n        this.p5.stroke(3 * this.p5.windowWidth / 4)\n        const startY = this.p5.windowHeight / 12\n        const endY = this.p5.windowHeight\n        const startX = 5 * this.p5.windowWidth / 12\n        const endX = 7 * this.p5.windowWidth / 12\n        let iterations = 0\n        let iterationRatio = 10\n        let y = startY\n        let spacingRatio = 10\n        while (y < endY) {\n            const idx = (this.colorSet.length - 1) - parseInt((iterations % 25).toString(), 10)\n            this.p5.stroke(this.colorSet[idx].val)\n            this.p5.beginShape()\n            for (let x = (startX - iterationRatio); x < (endX + iterationRatio); ++x) {\n                let noiseIntensity: number = 30\n                if (this.p5.windowWidth < 500) {\n                    noiseIntensity = 50\n                }\n                this.p5.vertex(x,\n                    y - noiseIntensity / (1 + this.p5.pow(x - (this.p5.windowWidth / 2), 4) / 8e6) *\n                    this.p5.noise(x / 20 + this.f / 50 + y) * (iterationRatio / 100))\n            }\n            iterationRatio *= 1.18\n            this.p5.endShape()\n            y += spacingRatio\n            spacingRatio *= 1.1\n            iterations++\n        }\n    }\n}\n","import { Color } from './models/color'\nimport { DottedSphere } from './models/dotted-sphere'\nimport {Mountains} from './models/mountains'\n\nclass Macou {\n\n    private readonly p5: any\n    private sphere: DottedSphere\n    private background: Mountains\n\n    constructor(p: any) {\n        this.p5 = p\n        this.sphere = new DottedSphere(p)\n        this.background = new Mountains(p)\n    }\n\n    public init = () => {\n        this.p5.setup = this.setup\n        this.p5.draw = this.draw\n    }\n\n    private setup = (): void => {\n        this.p5.createCanvas(this.p5.windowWidth, this.p5.windowHeight)\n        this.p5.background(Color.BLACK)\n        this.sphere.init()\n        this.background.setup()\n    }\n\n    private draw = (): void => {\n        this.background.draw()\n        this.sphere.show()\n    }\n}\n\nexport const createMacou = (p: any): void => new Macou(p).init()\n","import React from 'react'\nimport { createMacou } from '../sketches/macou'\n// @ts-ignore\nimport P5Wrapper from 'react-p5-wrapper'\n\nexport class AnimatedBackground extends React.Component<any, any> {\n\n  render = (): JSX.Element => <P5Wrapper sketch={createMacou}/>\n}\n","import React from 'react'\nimport { Menu, MenuItemProps } from 'semantic-ui-react'\nimport './SideMenu.css'\n\nexport interface SideMenuState {\n  activeItem: string\n}\n\nexport class SideMenu extends React.Component<any, SideMenuState> {\n  constructor(props: any) {\n    super(props)\n    this.state = { activeItem: 'home' }\n  }\n\n  render = (): JSX.Element => (\n    <Menu pointing secondary vertical className={'website-menu'} color={'grey'}>\n      <Menu.Item\n        name='home'\n        active={this.state.activeItem === 'home'}\n        onClick={this.handleItemClick}\n      />\n      <Menu.Item\n        name='events'\n        active={this.state.activeItem === 'events'}\n        onClick={this.handleItemClick}\n      />\n      <Menu.Item\n        name='follow us'\n        active={this.state.activeItem === 'follow us'}\n        onClick={this.handleItemClick}\n      />\n    </Menu>\n  )\n\n  private handleItemClick = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>, data: MenuItemProps): void => {\n    this.setState(() => ({ activeItem: data.name! }))\n    e.preventDefault()\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { AnimatedBackground } from './components/AnimatedBackground'\nimport { SideMenu } from './components/SideMenu'\nimport './App.css'\n\nexport const App: React.FC = () => (\n  <div className='App'>\n    <AnimatedBackground/>\n    <h1>Nodes</h1>\n    <SideMenu/>\n  </div>\n)\n"],"sourceRoot":""}